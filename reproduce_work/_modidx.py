# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/reproducework',
                'doc_host': 'https://reproduce-work.github.io',
                'git_url': 'https://github.com/reproduce-work/reproducework',
                'lib_path': 'reproduce_work'},
  'syms': { 'reproduce_work.build': { 'reproduce_work.build.main': ('package.html#main', 'reproduce_work/build.py'),
                                      'reproduce_work.build.read_base_config': ('package.html#read_base_config', 'reproduce_work/build.py'),
                                      'reproduce_work.build.replace_inserts_with_toml_data': ( 'package.html#replace_inserts_with_toml_data',
                                                                                               'reproduce_work/build.py')},
            'reproduce_work.core': { 'reproduce_work.core.ReproduceWorkEncoder': ( 'core.html#reproduceworkencoder',
                                                                                   'reproduce_work/core.py'),
                                     'reproduce_work.core.ReproduceWorkEncoder.dump_str': ( 'core.html#reproduceworkencoder.dump_str',
                                                                                            'reproduce_work/core.py'),
                                     'reproduce_work.core.ReproduceWorkEncoder.dump_value': ( 'core.html#reproduceworkencoder.dump_value',
                                                                                              'reproduce_work/core.py'),
                                     'reproduce_work.core.check_for_defintion_in_context': ( 'core.html#check_for_defintion_in_context',
                                                                                             'reproduce_work/core.py'),
                                     'reproduce_work.core.generate_config': ('core.html#generate_config', 'reproduce_work/core.py'),
                                     'reproduce_work.core.get_cell_index': ('core.html#get_cell_index', 'reproduce_work/core.py'),
                                     'reproduce_work.core.publish_data': ('core.html#publish_data', 'reproduce_work/core.py'),
                                     'reproduce_work.core.publish_file': ('core.html#publish_file', 'reproduce_work/core.py'),
                                     'reproduce_work.core.publish_variable': ('core.html#publish_variable', 'reproduce_work/core.py'),
                                     'reproduce_work.core.read_base_config': ('core.html#read_base_config', 'reproduce_work/core.py'),
                                     'reproduce_work.core.register_notebook': ('core.html#register_notebook', 'reproduce_work/core.py'),
                                     'reproduce_work.core.reproducible': ('core.html#reproducible', 'reproduce_work/core.py'),
                                     'reproduce_work.core.requires_config': ('core.html#requires_config', 'reproduce_work/core.py'),
                                     'reproduce_work.core.serialize_to_toml': ('core.html#serialize_to_toml', 'reproduce_work/core.py'),
                                     'reproduce_work.core.set_default_dir': ('core.html#set_default_dir', 'reproduce_work/core.py'),
                                     'reproduce_work.core.test_validate_base_config': ( 'core.html#test_validate_base_config',
                                                                                        'reproduce_work/core.py'),
                                     'reproduce_work.core.update_watched_files': ( 'core.html#update_watched_files',
                                                                                   'reproduce_work/core.py'),
                                     'reproduce_work.core.validate_base_config': ( 'core.html#validate_base_config',
                                                                                   'reproduce_work/core.py')},
            'reproduce_work.dynamic': { 'reproduce_work.dynamic.ReproduceWorkEncoder': ( 'dynamic.html#reproduceworkencoder',
                                                                                         'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.ReproduceWorkEncoder.dump_str': ( 'dynamic.html#reproduceworkencoder.dump_str',
                                                                                                  'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.ReproduceWorkEncoder.dump_value': ( 'dynamic.html#reproduceworkencoder.dump_value',
                                                                                                    'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.check_for_defintion_in_context': ( 'dynamic.html#check_for_defintion_in_context',
                                                                                                   'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.get_cell_index': ( 'dynamic.html#get_cell_index',
                                                                                   'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.publish_data': ('dynamic.html#publish_data', 'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.publish_file': ('dynamic.html#publish_file', 'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.publish_variable': ( 'dynamic.html#publish_variable',
                                                                                     'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.read_base_config': ( 'dynamic.html#read_base_config',
                                                                                     'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.register_notebook': ( 'dynamic.html#register_notebook',
                                                                                      'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.reproducible': ('dynamic.html#reproducible', 'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.requires_config': ( 'dynamic.html#requires_config',
                                                                                    'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.serialize_to_toml': ( 'dynamic.html#serialize_to_toml',
                                                                                      'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.set_default_dir': ( 'dynamic.html#set_default_dir',
                                                                                    'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.update_watched_files': ( 'dynamic.html#update_watched_files',
                                                                                         'reproduce_work/dynamic.py'),
                                        'reproduce_work.dynamic.validate_base_config': ( 'dynamic.html#validate_base_config',
                                                                                         'reproduce_work/dynamic.py')},
            'reproduce_work.package': { 'reproduce_work.package.main': ('package.html#main', 'reproduce_work/package.py'),
                                        'reproduce_work.package.read_base_config': ( 'package.html#read_base_config',
                                                                                     'reproduce_work/package.py'),
                                        'reproduce_work.package.replace_inserts_with_toml_data': ( 'package.html#replace_inserts_with_toml_data',
                                                                                                   'reproduce_work/package.py')}}}
