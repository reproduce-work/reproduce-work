[project]
full_title = "\\texttt{reproduce.work}: A framework to facilitate cross-platform computational reproducibility in scientific publishing"
abstract = """
In metascience, computational reproduction is the process of reproducing the results of a scientific paper using the data and code provided by the authors of the paper. This subject sits within the broader context of ``reproducibility" in scientific  research, which is the idea that scientific results should be reproducible by other scientists. Concepts around reproducibility have been core to the philosophy of science for decades, but several aspects of the scientific method have been challenged by recent developments. 
"""
github_repo = "reproduce-work/reproduce-work"

[repro]
version = "reproduce.work/v1/default"
stages = [ "init", "develop", "build",]
verbose = false
notebooks = [ "nbs/index.ipynb",]

[repro.files]
input = "reproduce/main.md"
dynamic = "reproduce/pubdata.toml"
latex_template = "reproduce/latex/template.tex"
output = "reproduce/latex/compiled.tex"
watch = [ "reproduce/main.md", "reproduce/pubdata.toml", "reproduce/latex/template.tex",]

[authors.author1]
email = "alex.miller@marshall.usc.edu"
name = "Alex P. Miller"
affiliation = "USC Marshall School of Business"

[repro.stage.init]
script = "docker build -t reproduce-work-dev .\ndocker build -t tinytex reproduce/Dockerfile.tinytex\ndocker build -t watcher reproduce/Dockerfile.watch\n"

[repro.stage.develop]
script = "docker run -v $(pwd):/home/jovyan -p 8888:8888 reproduce-work-dev\ndocker run watcher \"reproduce/main.md,reproduce/pubdata.toml,reproduce/latex/template.tex\" \"echo \"File has changed!\" && build_cmd\"\n"

[repro.stage.build]
script = "docker run --rm -i -v $(pwd):/home/jovyan -p 8888:8888 reproduce-work-dev python reproduce_work.build() # this replaces instances of INSERTvar in input file\ndocker run --rm -i -v $(pwd):/home -e REPROWORKDIR=\"reproduce\" -e REPROWORKOUTFILE=\"reproduce/latex/compiled.tex\" tex-prepare python build.py # this converts the markdown to latex\ndocker run --rm -i --net=none -v $(pwd):/home tex-compile sh -c \"cd /home/reproduce/latex && xelatex compiled.tex\" # this compiles the latex\nnbdev_install_hooks && nbdev_export\n"
