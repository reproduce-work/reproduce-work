version: '3'

services:
  rwatch:
    image: watcher
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}:/usr/src/app
    environment:
      - REPROWORKDIR=reproduce
      - REPROWORKOUTFILE=reproduce/latex/compiled.tex
      - HOSTWORKDIR=${PWD}
    command:
      - "${REPRO_WATCH_LIST}"
      - ${REPROWORKDIR}/watch.sh    
    stdin_open: true
    tty: true

  tex-prepare:
    image: tex-prepare
    volumes:
      - ${HOSTWORKDIR}:/home
    environment:
      - REPROWORKDIR=reproduce
    command: python /run.py

  tex-compile:
    image: tex-compile
    volumes:
      - ${HOSTWORKDIR}:/home
    network_mode: "none"
    environment:
      - REPROWORKDIR=reproduce
    command:
      - sh
      - -c
      - cd /home/reproduce/tmp/document/latex && xelatex report.tex && bibtex report

#export HOSTWORKDIR="$(pwd)" && export WATCH_LIST="$(awk '/^watch = \[/ {gsub(/^watch = \[|]$/, "", $0); n = split($0, arr, ","); result = ""; for (i = 1; i <= n; i++) { gsub(/^ *"| *"$|^ *| *$/, "", arr[i]); if (arr[i] != "") result = (result == "" ? arr[i] : result "," arr[i]); } print result;}' "${REPRODUCEWORKDIR}/config.toml")" && docker compose -p reproducework -f "reproduce/docker-compose-reproduce.yml" up --build
#export HOSTWORKDIR="$(pwd)" && docker run --rm -i -v ${HOSTWORKDIR}:/home/jovyan -p 8881:8888 reproduceworkdev nbdev_export
#"export HOSTWORKDIR=\"$(pwd)\" && docker run --rm -i -v ${HOSTWORKDIR}:/home/jovyan -p 3000 reproduceworkdev livepreview && docker-compose -f reproduce/docker-compose-reproduce.yml up tex-prepare && docker-compose -f reproduce/docker-compose-reproduce.yml up tex-compile"


#export REPROWORKDIR='reproduce' && chmod a+x ${REPROWORKDIR}/watch.sh && export HOSTWORKDIR="$(pwd)" && export REPRO_WATCH_LIST="$(awk '/^watch = \[/ {gsub(/^watch = \[|]$/, "", $0); n = split($0, arr, ","); result = ""; for (i = 1; i <= n; i++) { gsub(/^ *"| *"$|^ *| *$/, "", arr[i]); if (arr[i] != "") result = (result == "" ? arr[i] : result "," arr[i]); } print result;}' "${REPROWORKDIR}/config.toml" | tr -d '\n')" && docker compose -p reproducework -f "reproduce/docker-compose-reproduce.yml" up --build